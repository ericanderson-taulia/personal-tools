taulia {
  usingEc2 = false
  db {
    authApi {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/taulia?useGmtMillisForDatetimes=true'
      username = 'root'
      password = ''
      hibernateDbVariant = 'MYSQL'
    }
    authClient {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/taulia_auth?useGmtMillisForDatetimes=true'
      username = 'root'
      password = ''
      hibernateDbVariant = 'MYSQL'
    }
    platform {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/taulia?useGmtMillisForDatetimes=true'
      username = 'root'
      password = ''
      hibernateDbVariant = 'MYSQL'
    }
    trustedComponent {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/taulia_trusted_component?useGmtMillisForDatetimes=true'
      username = 'root'
      password = ''
      hibernateDbVariant = 'MYSQL'
    }
    earlyPayment {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/taulia_early_payment?useGmtMillisForDatetimes=true'
      username = 'root'
      password = ''
      hibernateDbVariant = 'MYSQL'
    }
  }
  jasypt {
    algorithm = "PBEWITHSHA256AND256BITAES-CBC-BC"
    providerName = "BC"
    password = "set in local config.groovy"
    keyObtentionIterations = 1000
  }
  test {
    authApi {
      baseUri = 'http://localhost:8090/authApi/'
    }
    clamavApi {
      baseUri = 'http://localhost:8899/authApi/'
    }
    intApi {
      baseUri = 'http://localhost:8889/'
      cassandraPath = 'cassandraApi/'
    }
    restApi {
      baseUri = 'http://localhost:8888/'
    }
    restBuyerApi {
      baseUri = 'http://localhost:9998/'
    }
    pingdom {
      password = 'Abcd1234!'
    }
    platform {
      baseUri = 'http://localhost:8080/tauliaPlatform/'
    }
    soapApi {
      baseUri = 'http://localhost:8080/tauliaPlatform/'
    }
    as2Con {
      baseUri = 'http://qa7-as2con.taulia.com/'
    }
    babelway {
      baseUri = 'babelway.net'
    }
    ticketMgt {
      contextPath = '/0.1'
      server = 'localhost'
      port = 9988
      scheme = 'http'
    }
    funderApi {
      server = 'localhost'
      port = 10010
      clientCertificateLocation = 'src/test/resources/certs/funder/local/intapi/intapi.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/funder/local/server/serverstore.jks'
      trustStorePassword = 'password'
    }
    earlyPaymentApi {
      server = 'https://localhost:8490'
      port = 8490
      clientCertificateLocation = 'src/test/resources/certs/earlyPayment/local/ep_appserver.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/earlyPayment/local/ep_serverstore.jks'
      trustStorePassword = 'password'
    }
    authClient {
      keystoreFile = 'src/test/resources/certs/authClient/local/auth_appserver.pfx'
      keystorePassphrase = 'password'
      truststoreFile = 'src/test/resources/certs/authClient/local/auth_serverstore.jks'
      truststorePassphrase = 'password'
      serverUrl = 'https://localhost:8094'
      maxPoolSize = 10
      timeout = 10000
    }
    trustedComponentApi {
      server = 'localhost'
      port = 8488
      clientCertificateLocation = 'src/test/resources/certs/client/clientadmin.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/server/serverstore.jks'
      trustStorePassword = 'password'
    }
    trustedComponentSchedulerApi {
      server = 'localhost'
      port = 8488
      clientCertificateLocation = 'src/test/resources/certs/client/clientadmin.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/server/serverstore.jks'
      trustStorePassword = 'password'
    }
    xmlRpc {
          protocol = 'http'
          host = '127.0.0.1'
          port = 9012
          path = '/xmlrpc'
          trustStore='/Users/stephenbartholomew/Downloads/pod_truststore'
          incomingIp = '127.0.0.1'
          multiErpFlow = true
        }

    sim {
      clientCertificateLocation = 'src/test/resources/certs/client/support/appserver.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/client/support/serverstore.jks'
      trustStorePassword = 'password'
      server = 'localhost'
      port = 8588
    }
    message {
      clientCertificateLocation = 'src/test/resources/certs/message/message_appserver.pfx'
      clientCertificatePassword = 'password'
      trustStoreLocation = 'src/test/resources/certs/message/message_serverstore.jks'
      trustStorePassword = 'password'
      server = 'localhost'
      port = 11235
      maxPoolSize = 100
      timeout = 10000
    }
    extapiBuyerIntegration {
      server = 'localhost'
      port = 9502
      protocol = 'https'
    }
    purchaseOrderClient {
      server = "localhost"
      port = 8688
      clientCertificateLocation = "src/test/resources/certs/client/support/appserver.pfx"
      clientCertificatePassword = "password"
      trustStoreLocation = "src/test/resources/certs/client/support/serverstore.jks"
      trustStorePassword = "password"
    }
    scfPlusLoadTest {
      invoiceCount = 500
    }
    attachment {
       serverUrl = 'https://attachment.qetest-green.k8s.tauliaint.com:443'
       clientCertificateLocation = 'src/test/resources/certs/attachment/local/uiClient-key.pfx'
       clientCertificatePassword = 'password'
       trustStoreLocation = 'src/test/resources/certs/attachment/local/server-cert.jks'
       trustStorePassword = 'password'
       //server = 'https://localhost:10110'
       server = 'https://38.122.223.18:10110'
       port = 10110
       maxPoolSize = 100
       timeout = 10000
    }

  }
}
